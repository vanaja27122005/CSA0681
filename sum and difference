#include <stdio.h>
#include <stdlib.h>

int compare(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}

int findMthMax(int arr[], int size, int M) {
    if (M < 1 || M > size) return -1; // illegal input
    qsort(arr, size, sizeof(int), compare);
    return arr[size - M];
}

int findNthMin(int arr[], int size, int N) {
    if (N < 1 || N > size) return -1; // illegal input
    qsort(arr, size, sizeof(int), compare);
    return arr[N - 1];
}

int main() {
    int arr1[] = {16, 16, 16, 16, 16};
    int M1 = 0, N1 = 1;
    int arr2[] = {0, 0, 0, 0};
    int M2 = 1, N2 = 2;
    int arr3[] = {-12, -78, -35, -42, -85};
    int M3 = 3, N3 = 3;
    int arr4[] = {15, 19, 34, 56, 12};
    int M4 = 6, N4 = -3;
    int arr5[] = {85, 45, 65, 75, 95};
    int M5 = 5, N5 = 2;

    int arrays[5][5] = {
        {16, 16, 16, 16, 16},
        {0, 0, 0, 0, 0},
        {-12, -78, -35, -42, -85},
        {15, 19, 34, 56, 12},
        {85, 45, 65, 75, 95}
    };
    int M[] = {0, 1, 3, 6, 5};
    int N[] = {1, 2, 3, -3, 2};
    int sizes[] = {5, 4, 5, 5, 5};
    
    for (int i = 0; i < 5; i++) {
        int Mmax = findMthMax(arrays[i], sizes[i], M[i]);
        int Nmin = findNthMin(arrays[i], sizes[i], N[i]);
        if (Mmax == -1 || Nmin == -1) {
            printf("(illegal input)\n");
        } else {
            int sum = Mmax + Nmin;
            int diff = Mmax - Nmin;
            printf("Sum: %d, Difference: %d\n", sum, diff);
        }
    }

    return 0;
}
